# -*- coding: utf-8 -*-
"""Mountain Paths v2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1juDjVfpIhcp1o1YDxoRoZbEuBv6YY8vo
"""

import matplotlib.pyplot as plt
import numpy as np


file = open(r"C:\Users\23prakash\Downloads\mountain_paths\Colorado_480x480.txt","r")
lines = file.readlines()
floats = []
for i in range(0, len(lines)):
      
       data = lines[i].rstrip('\n').split('   ')
       data.pop(0)
       data = [float(i) for i in data]
       floats.append(data)
               

terrain = np.array(floats)
plt.imshow(terrain, cmap= "gray")
marker_size = 0.01

def getValidation(row_num):
    validation = dict()
    if row_num - 1 < 0:
        validation.update({'has_upper': False})
    else:
        validation.update({'has_upper': True})
    if row_num + 1 > 479:
        validation.update({'has_lower': False})
    else:
        validation.update({'has_lower': True})
    
    return validation


def getNextRow(terrain, tracker, ind):
    validation = getValidation(tracker)
    current = terrain[tracker][ind]
    mid_next = terrain[tracker][ind + 1]
    diff_1 = abs(current - mid_next)
    diff_min = diff_1
    next_step = 'mid_next'
    if validation.get('has_upper'):
        upper_next = terrain[tracker - 1][ind + 1]
        diff_2 = abs(current - upper_next)
        if diff_2 < diff_min:
            diff_min = diff_2
            next_step = 'upper_next'
        
    if validation.get('has_lower'):
        lower_next = terrain[tracker + 1][ ind + 1]
        diff_3 = abs(current - lower_next)
        if diff_3 < diff_min:
            diff_min = diff_3
            next_step = 'lower_next'
    if next_step == 'mid_next':
        plt.scatter(ind, tracker , c = 'r', s = marker_size)
        return tracker
    elif next_step == 'upper_next':
        plt.scatter( ind, tracker -1 , c = 'r', s = marker_size)
        return tracker - 1
    else:
        plt.scatter( ind, tracker + 1 , c = 'r', s = marker_size)

        return tracker + 1
    
for row_ind in range(450,470):
    plt.scatter(0, row_ind, c='r', s = marker_size)
    tracker = row_ind
    for ind in range(479):
        tracker = getNextRow(terrain, tracker, ind)
        

plt.show
plt.savefig('result.png')